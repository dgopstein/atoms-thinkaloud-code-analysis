{\rtf1\ansi\deff0\uc1\ansicpg1252\deftab720{\fonttbl{\f0\fnil\fcharset1 Arial;}{\f1\fnil\fcharset2 Wingdings;}{\f2\fnil\fcharset2 Symbol;}}{\colortbl\red0\green0\blue0;\red255\green0\blue0;\red0\green128\blue0;\red0\green0\blue255;\red255\green255\blue0;\red255\green0\blue255;\red128\green0\blue128;\red128\green0\blue0;\red0\green255\blue0;\red0\green255\blue255;\red0\green128\blue128;\red0\green0\blue128;\red255\green255\blue255;\red192\green192\blue192;\red128\green128\blue128;\red0\green0\blue0;}\wpprheadfoot1\paperw12240\paperh15840\margl1880\margr1880\margt1440\margb1440\headery720\footery720\ftnbj\sftnbj\sftnrstcont\nocolbal\sftnnar\saftnnar\fet0\endnhere\sectdefaultcl{\*\generator WPTools_7.270-PRM;}{\plain\fs22\cf0\cb0{\*\bkmkstart Section - Evaluation:43748&Admin%^XyM2H7JyS-000¦}Interviewer:        00:01          Okay, so the audio recording is on and can you just say whether or not you're okay being audio recorded?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            00:06          Yes, I'm perfectly fine being audio recorded.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        00:09          So here's the first question. So the time will be here.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            00:17          Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 11:43748&Admin%^zdtujXtrT-000¦}{\*\bkmkstart Operator Precedence Atom:43748&Admin%^SVlr2sxL4-000¦}{\*\bkmkstart Confusingness - Atom:43748&Admin%^mNC3aJt8c-000¦}{\*\bkmkstart Confidence - 2:43748&Admin%^8V9e85ZV8-000¦}{\*\bkmkstart Answer - Wrong:43748&Admin%^gRtYnfPLK-000¦}Interviewer:        00:18          [Snippet 11] So if you could just write that down and then if you can just think aloud your thoughts as you go.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            00:27          So, uh, so integer the variable integer is assigned 0. So we have 0. So you have a if-statement here? So if 0 and 1 or 2. Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            00:45          \cf0\cb0{\*\bkmkstart Unsure:43586&Admin%^Dgir7mMcm-000¦}V-eye is 6 else V-eye is 3. Huh.{\*\bkmkend Unsure:43586&Admin%^Dgir7mMcm-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            00:49          So. Hmm. Okay. And 1 or 2.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        01:02          What are you thinking?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            01:04        \cf0\cb0{\*\bkmkstart Not Previously Written:43587&Admin%^fKvLHbZ3x-000¦}  I'm, I haven't used this notation anywhere{\*\bkmkend Not Previously Written:43587&Admin%^fKvLHbZ3x-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . Can I mark on the code\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        01:08          please.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            01:09          Okay. So if 0 and 1 or 2\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            01:16         \cf0\cb0{\*\bkmkstart Unsure:43587&Admin%^IPlb3IVak-000¦} If I'm correct, these are, this is And and Or,{\*\bkmkend Unsure:43587&Admin%^IPlb3IVak-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        01:20          So I can't answer yes or no questions but keep, keep talking.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            01:28          Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            01:30          \cf0\cb0{\*\bkmkstart Guessing:43587&Admin%^jfTlHcAXm-000¦}{\*\bkmkstart Surprising comment:43745&Admin%^pozZSvoV7-000¦Subject seems to think each if statement needs a variable, and for some reason belives that a constant can "be" a variable? }So our variable here is 0{\*\bkmkend Surprising comment:43745&Admin%^pozZSvoV7-000¦Subject seems to think each if statement needs a variable, and for some reason belives that a constant can "be" a variable? }\li0\fi0\ri0\sb0\sa0\ql\vertalt . If it's 0 and 1 I'm not really sure what the output of this is, I guess it would still be 3, it'll be 0.{\*\bkmkend Guessing:43587&Admin%^jfTlHcAXm-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt  So where do I write?\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        01:48          Um, yeah, just the results of that line.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            01:50          Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        01:51          {\*\bkmkstart Visual Reference:43745&Admin%^1CfXgx2nn-000¦The "O/P" that the subject wrote, was hard for the interviewer to read. }I guess that's not clear.{\*\bkmkend Visual Reference:43745&Admin%^1CfXgx2nn-000¦The "O/P" that the subject wrote, was hard for the interviewer to read. }\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            02:03          Okay. So do I? [softly] How confident are you that you evaluated the code correctly? I am not sure. I'll mark it as a 2.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        02:18          Okay, so before we go on what? I just can't read that\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            02:22          That's output O/P.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        02:23          Oh, okay, cool. Um, and then output 0, cool. And so can I just ask, I'll after everyone, I'll just ask you why you put down that value for your confidence.\par
\pard\plain\plain\fs22\cf0\cb0\par
\plain\fs22 Subject:            02:34          \cf0\cb0{\*\bkmkstart Surprising comment:43587&Admin%^Xh9IDbLAz-000¦}So right, it was partly because{\*\bkmkstart Unfamiliar Syntax:43587&Admin%^1jfljIiyr-000¦}{\*\bkmkstart If-statements must operate on a variable:43587&Admin%^p06lPzR6i-000¦} I'm not familiar with this notation [if (0 && 1 || 2)] so I didn't know, uh, what. So will the variable will be affected by this or it will just completely skip this and just print out the variable value which initially was assigned here. So yeah, so{\*\bkmkstart Control Flow Skips Code:43587&Admin%^hVcrj0BQu-000¦} I'm just sticking to this rather than, you know, the code entering into the if statement.{\*\bkmkend If-statements must operate on a variable:43587&Admin%^p06lPzR6i-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Unfamiliar Syntax:43587&Admin%^1jfljIiyr-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Control Flow Skips Code:43587&Admin%^hVcrj0BQu-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Surprising comment:43587&Admin%^Xh9IDbLAz-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        03:03          Sure. So have you seen any, any parts of this notation before or is it all new to you?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            03:11          Um, I mean, uh, so what I've seen is, I've seen variables, so like if we could\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        03:18          Yeah, you can write anywhere.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            03:19          Okay. So if you have a variable V1 and so we have an if-statement here, if V1, let's say is we're just checking if it's 0.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        03:27          Sure.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            03:28          \cf0\cb0{\*\bkmkstart Implicit Predicate Atom:43587&Admin%^5vo0bIIdx-000¦}Our, our lists and over here we have a. So this is the and statement, right.{\*\bkmkstart Unfamiliar Syntax:43587&Admin%^IGYu9X6Lc-000¦}{\*\bkmkstart Unsure:43587&Admin%^cLDIQnDCO-000¦} This is and so V1 equals equals 1. So yeah, this makes sense because it's comparing the variables to 0s and 1s here. But this, I'm not sure what it is actually{\*\bkmkend Unsure:43587&Admin%^cLDIQnDCO-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Unfamiliar Syntax:43587&Admin%^IGYu9X6Lc-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt .{\*\bkmkend Implicit Predicate Atom:43587&Admin%^5vo0bIIdx-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        03:49          Okay, cool. Thank you. Um, and uh, so we will get a chance to go back and talk about all of these once we go through them all. Okay. Um, so if you could write that start time.\cf0\cb0{\*\bkmkend Answer - Wrong:43748&Admin%^gRtYnfPLK-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confidence - 2:43748&Admin%^8V9e85ZV8-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confusingness - Atom:43748&Admin%^mNC3aJt8c-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Operator Precedence Atom:43748&Admin%^SVlr2sxL4-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet - 11:43748&Admin%^zdtujXtrT-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 50:43748&Admin%^lQ5FRjSYH-000¦}{\*\bkmkstart Conditional Operator Transformation:43748&Admin%^yL2JF6Ai7-000¦}{\*\bkmkstart Confusingness - Transformation:43748&Admin%^HlR2Qf0lD-000¦}{\*\bkmkstart Confidence - 6:43748&Admin%^QuEOykQBj-000¦}{\*\bkmkstart Answer - Right:43748&Admin%^XtZIMujXi-000¦}Subject:            04:04         [Snippet 50]  Yeah. 7:10\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            04:07          V1, V2, V3. If V1 is 2, else V3 is 5, printf V3\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            04:24          So'll this just print out a 5 because our variable 1 and 2 are 0 and 4 respectively. Nothing is assigned to V3. So if V1 is 2, which is, if it is not, it will go to the else which just assigns 5 to V3 and we're just printing V3. So that would be 5. Yeah. Yeah. And the time is 7:11\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        04:50          Yep, you marked your conference level. So why, why did you pick that confidence level? Why did you pick 6?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            04:56          \cf0\cb0{\*\bkmkstart Correct Semantics:43587&Admin%^MtRseMhiy-000¦}{\*\bkmkstart Sure:43587&Admin%^Q4kZ4wuv8-000¦}Because this makes sense like I showed you in the previous page. So we're just comparing the variables here. Uh, so if the variable is, if the,{\*\bkmkstart Non-standard terminology:43745&Admin%^Xla4RHNUQ-000¦"doesn't work" means "execute the false branch" } if the if-statement doesn't work it'll go to the else{\*\bkmkend Non-standard terminology:43745&Admin%^Xla4RHNUQ-000¦"doesn't work" means "execute the false branch" }\li0\fi0\ri0\sb0\sa0\ql\vertalt  and uh, because else doesn't take any, a condition into factor. So it just assigns the value to it, which is 5 and we're just printing the value V3, so, yeah. Pretty confident it works. Yeah.{\*\bkmkend Sure:43587&Admin%^Q4kZ4wuv8-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Correct Semantics:43587&Admin%^MtRseMhiy-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Answer - Right:43748&Admin%^XtZIMujXi-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confidence - 6:43748&Admin%^QuEOykQBj-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confusingness - Transformation:43748&Admin%^HlR2Qf0lD-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Conditional Operator Transformation:43748&Admin%^yL2JF6Ai7-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet - 50:43748&Admin%^lQ5FRjSYH-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 71:43748&Admin%^9KUXg2mms-000¦}{\*\bkmkstart Preprocessor in Statement Atom:43748&Admin%^Ho70VR042-000¦}{\*\bkmkstart Confusingness - Atom:43748&Admin%^XuTpPxQHL-000¦}{\*\bkmkstart Confidence - 6:43748&Admin%^iHV5suCkK-000¦}{\*\bkmkstart Answer - Wrong:43748&Admin%^UywHaAtQp-000¦}Interviewer:        05:24          [Snippet 71] Cool. Thank you. The time is 7:12.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            05:40          Int V1 is 1, V2 is 2, if V1 is less than V2. V1 is less than V... Okay. So I, I speak out loudly, right?\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        05:55          Oh, I think it's okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            05:57          \cf0\cb0{\*\bkmkstart Incorrect Semantics:43587&Admin%^U9njTP5yT-000¦}{\*\bkmkstart Preprocessor in Statement Atom:43587&Admin%^uJJTfsow0-000¦}Okay. So V1 is 1 V2 is 2. V1 is less than 2, V2, yes. So we go here. Define. So we define and this as 1 M2 is 2, right. So percentage d, M1 M2. So we just print out 1 and 2.{\*\bkmkend Preprocessor in Statement Atom:43587&Admin%^uJJTfsow0-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Incorrect Semantics:43587&Admin%^U9njTP5yT-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            06:21          Yep.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        06:22          Okay. And why did you choose that confidence level?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            06:27          \cf0\cb0{\*\bkmkstart Preprocessor in Statement Atom:43587&Admin%^6AHONpcCu-000¦}{\*\bkmkstart Incorrect Semantics:43587&Admin%^VPg7fR3NI-000¦}Because, uh, the, if statement. So if condition holds. So it goes inside the if statement where it assigns M1 and M2 as 1 and 2 respectively and we just print them out afterwards without any problems. So yeah.{\*\bkmkend Incorrect Semantics:43587&Admin%^VPg7fR3NI-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Preprocessor in Statement Atom:43587&Admin%^6AHONpcCu-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        06:45          Okay, great. Oh, can you also write, sorry about that.\cf0\cb0{\*\bkmkend Answer - Wrong:43748&Admin%^UywHaAtQp-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confidence - 6:43748&Admin%^iHV5suCkK-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confusingness - Atom:43748&Admin%^XuTpPxQHL-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Preprocessor in Statement Atom:43748&Admin%^Ho70VR042-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet - 71:43748&Admin%^9KUXg2mms-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 25:43748&Admin%^Lat4ynQn8-000¦}{\*\bkmkstart Constant Variables Atom:43748&Admin%^i3JamUYjV-000¦}{\*\bkmkstart Confusingness - Atom:43748&Admin%^C0RE7Dx89-000¦}{\*\bkmkstart Confidence - 6:43748&Admin%^lE7chL2Mu-000¦}{\*\bkmkstart Answer - Right:43748&Admin%^u4nuUvH7w-000¦}Interviewer:        06:58          [Snippet 25] 7:13 again\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            07:04          V1 is three, V2 is V1 plus 3 plus 2, which is 5. Print V2, 5 and time is 7:14.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            07:22          \cf0\cb0{\*\bkmkstart Correct Semantics:43587&Admin%^GtzybvEVj-000¦}So here we just have a variable. We take a second variable, add it, add 2 the first variable and store it in the second variable and just print out the value. So yeah, 5{\*\bkmkend Correct Semantics:43587&Admin%^GtzybvEVj-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        07:33          All right, cool.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            07:44          Oh did I write a finish time on that though?\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        07:46          You did, yeah. Thank you.\par
\plain\fs22\cf0\cb0{\*\bkmkend Answer - Right:43748&Admin%^u4nuUvH7w-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confidence - 6:43748&Admin%^lE7chL2Mu-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confusingness - Atom:43748&Admin%^C0RE7Dx89-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Constant Variables Atom:43748&Admin%^i3JamUYjV-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet - 25:43748&Admin%^Lat4ynQn8-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 109:43748&Admin%^USl1lAeQr-000¦}{\*\bkmkstart Omitted Curly Braces Atom:43748&Admin%^1FtN0Jvff-000¦}{\*\bkmkstart Confusingness - Atom:43748&Admin%^0AgGAbcEs-000¦}{\*\bkmkstart Confidence - 5:43748&Admin%^fduTjLsBP-000¦}{\*\bkmkstart Answer - Wrong:43748&Admin%^RupP6Vc2O-000¦}Subject:            07:51          [Snippet 109] Int V1. Okay. If zero will be one plus plus. Okay. It's printed. {\*\bkmkstart Unsure:43587&Admin%^4XDIxhXTh-000¦}If 0. Hmm.{\*\bkmkend Unsure:43587&Admin%^4XDIxhXTh-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            08:03          Okay. So if 0.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            08:07          Huh?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            08:10          \cf0\cb0{\*\bkmkstart Value Exists:43587&Admin%^O1Qdn1MaL-000¦}{\*\bkmkstart Incorrect Semantics:43587&Admin%^7QMGA3DEv-000¦}{\*\bkmkstart Implicit Predicate Atom:43587&Admin%^VehakgY52-000¦Even though this predicate is in a similar form as the one in snippet 11, this time the participant doesn't believe the condition (0) interacts with the previously defined variable (V1 = 2). Instead, the participant just interperets the truthiness of 0 directly, albeit using unconventional reasoning. }So zero is... {\*\bkmkstart Inferring Semantics from Reasoning:43587&Admin%^MFqZkN3Y2-000¦}{\*\bkmkstart Boolean Value of Integer:43587&Admin%^1iItHj4b0-000¦}So we have, {\*\bkmkstart Surprising comment:43745&Admin%^w6FVzKFSh-000¦This seems to imply the participant thinks the semantics are subjective? How else can someone have an opinion on what the code should do? }in my opinion, it'll, it'll go inside the if statement{\*\bkmkend Surprising comment:43745&Admin%^w6FVzKFSh-000¦This seems to imply the participant thinks the semantics are subjective? How else can someone have an opinion on what the code should do? }\li0\fi0\ri0\sb0\sa0\ql\vertalt  because zero is, you know, we're not assigning it to anything. We're just moving forward with XXX. So zero exists, right. So if zero we have, we increment the value of V1 which is, which becomes three exiting that again V1 plus plus would be 4 and we just print out V1 {\*\bkmkend Implicit Predicate Atom:43587&Admin%^VehakgY52-000¦Even though this predicate is in a similar form as the one in snippet 11, this time the participant doesn't believe the condition (0) interacts with the previously defined variable (V1 = 2). Instead, the participant just interperets the truthiness of 0 directly, albeit using unconventional reasoning. }\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Incorrect Semantics:43587&Admin%^7QMGA3DEv-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Value Exists:43587&Admin%^O1Qdn1MaL-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt which is 4{\*\bkmkend Boolean Value of Integer:43587&Admin%^1iItHj4b0-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Inferring Semantics from Reasoning:43587&Admin%^MFqZkN3Y2-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            08:46          The time is 7:15 confidence value would be a five.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        08:49          Okay. Can you explain um, why five?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            08:53          Why five? Because uh, because \cf0\cb0{\*\bkmkstart Ambiguous Readability:43745&Admin%^9bYsV4FUN-000¦}the{\*\bkmkstart Snippet Value Judgement:43587&Admin%^JCgTuSUfQ-000¦}{\*\bkmkstart Unsure:43587&Admin%^njKqP6PHD-000¦} if statement isn't something which is clear{\*\bkmkend Unsure:43587&Admin%^njKqP6PHD-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet Value Judgement:43587&Admin%^JCgTuSUfQ-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Ambiguous Readability:43745&Admin%^9bYsV4FUN-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt  and{\*\bkmkstart Guessing:43587&Admin%^kJXK6L3Gs-000¦} {\*\bkmkstart Surprising comment:43745&Admin%^xDND5YKCf-000¦}I'm hoping that the answer would be correct{\*\bkmkend Guessing:43587&Admin%^kJXK6L3Gs-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Surprising comment:43745&Admin%^xDND5YKCf-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . So which I think it is, but I'm not gonna completely confident that it is so.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        09:11          Sure. Okay. Thank you.\cf0\cb0{\*\bkmkend Answer - Wrong:43748&Admin%^RupP6Vc2O-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confidence - 5:43748&Admin%^fduTjLsBP-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confusingness - Atom:43748&Admin%^0AgGAbcEs-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Omitted Curly Braces Atom:43748&Admin%^1FtN0Jvff-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet - 109:43748&Admin%^USl1lAeQr-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 37:43748&Admin%^ZMNBXT6Rl-000¦}{\*\bkmkstart Macro Operator Precedence Atom:43748&Admin%^Pukw26C65-000¦}{\*\bkmkstart Confusingness - Atom:43748&Admin%^flI79SeAU-000¦}{\*\bkmkstart Confidence - 6:43748&Admin%^BQP48Tjqn-000¦}{\*\bkmkstart Answer - Wrong:43748&Admin%^mQg6KrlhJ-000¦}Subject:            09:47          [Snippet 37]{\*\bkmkstart Unsure:43587&Admin%^NV2cEZAmM-000¦} {\*\bkmkstart Questioning Program Validity:43587&Admin%^CukgxOhwI-000¦}I'm not sure if we can write, a {\*\bkmkstart Non-standard terminology:43587&Admin%^mROvDMxXb-000¦}hash define{\*\bkmkend Non-standard terminology:43587&Admin%^mROvDMxXb-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt  in this fashion{\*\bkmkend Unsure:43587&Admin%^NV2cEZAmM-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Questioning Program Validity:43587&Admin%^CukgxOhwI-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt , but if we can, we have a certain output her otherwise. Okay. {\*\bkmkstart Relying on Correctness of Example:43587&Admin%^1kygr7IBS-000¦}So every code executes. Right?\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        10:02          Yeah\par
\pard\plain\plain\fs22\cf0\cb0\par
\plain\fs22 Subject:            10:02          So this, this works. Okay.\cf0\cb0{\*\bkmkend Relying on Correctness of Example:43587&Admin%^1kygr7IBS-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        10:04          That's correct. Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            10:06          \cf0\cb0{\*\bkmkstart Macro Operator Precedence Atom:43587&Admin%^Bc6oPp5aY-000¦}{\*\bkmkstart Incorrect Semantics:43587&Admin%^gbC60k7aj-000¦}Three minus one mhmm, int V1, V1 is M1 into two{\*\bkmkend Incorrect Semantics:43587&Admin%^gbC60k7aj-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Macro Operator Precedence Atom:43587&Admin%^Bc6oPp5aY-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . Two into two. Four. So I think the output would be four and I'll go with a five. I'll go with the six, yeah.\par
\pard\plain\plain\fs22\cf0\cb0\par
\plain\fs22 Interviewer:        10:23          Okay, cool. And why that confidence level?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            10:26          \cf0\cb0{\*\bkmkstart Relying on Correctness of Example:43587&Admin%^tw9KCZtPP-000¦}{\*\bkmkstart Surprising comment:43587&Admin%^LaiHnUsAX-000¦Initially the subject doubted whether the code even compiled. After remember that every snippet does compile/run without error their confidence became 6/6. It is surprising to me that they can go from utterly confused to completely confident without remembering anything about the semantics of the program, just a fact of this exercise. }Um, because, uh, I just remembered every program executes. So this, my thinking of this not working is wrong.{\*\bkmkend Surprising comment:43587&Admin%^LaiHnUsAX-000¦Initially the subject doubted whether the code even compiled. After remember that every snippet does compile/run without error their confidence became 6/6. It is surprising to me that they can go from utterly confused to completely confident without remembering anything about the semantics of the program, just a fact of this exercise. }\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Relying on Correctness of Example:43587&Admin%^tw9KCZtPP-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt  So yeah. So three minus one should be two and uh, {\*\bkmkstart Simple:43587&Admin%^duPvH06AY-000¦}Yeah, it's just straightforward after that.{\*\bkmkend Simple:43587&Admin%^duPvH06AY-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        10:43          Okay. Um, so you are right, it will execute. But um, if it weren't, if this were a problem, what a error would you expect to see? Like in what way wouldn't it work?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            11:00          Um okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            11:05          mhmm\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            11:06          {\*\bkmkstart Macro Expansion Can't Contain Space:43587&Admin%^C9IHilNH0-000¦This might imply that the participant is worried about the precedence of the expanded elements. Alternatively it might imply that they believe the syntax of #define doesn't allow spaces in the definition. }So, uh, so the hash define variable with the value. Uh, I'm not certain if the values can be distributed in a long, uh, in a, in a, in a statement sort of a thing because as, as over here it's three minus one. So if it's, if and it's separated by a space, so I'm not sure if hash define takes into account the spaces.{\*\bkmkend Macro Expansion Can't Contain Space:43587&Admin%^C9IHilNH0-000¦This might imply that the participant is worried about the precedence of the expanded elements. Alternatively it might imply that they believe the syntax of #define doesn't allow spaces in the definition. }\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        11:33          I see. So. Okay. So what would you be more used to seeing or what would you expect to see there instead?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            11:45          Um, if, uh, if it was three, uh, without any spaces, one that would. Yeah, that would work, I think, perfectly. This is sort of confusing because no spaces and uh, yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        12:00          Okay, cool. Thank you. One more after this one.\cf0\cb0{\*\bkmkend Answer - Wrong:43748&Admin%^mQg6KrlhJ-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confidence - 6:43748&Admin%^BQP48Tjqn-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confusingness - Atom:43748&Admin%^flI79SeAU-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Macro Operator Precedence Atom:43748&Admin%^Pukw26C65-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet - 37:43748&Admin%^ZMNBXT6Rl-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 85:43748&Admin%^57QnM4eIA-000¦}{\*\bkmkstart Repurposed Variable Atom:43748&Admin%^8zrbqk688-000¦}{\*\bkmkstart Confusingness - Atom:43748&Admin%^inF0utc4k-000¦}{\*\bkmkstart Confidence - 5:43748&Admin%^GgkzwMqYs-000¦}{\*\bkmkstart Answer - Wrong:43748&Admin%^FgEdscYEL-000¦}Subject:            12:19          [Snippet 85] So we have an array here holding five places. {\*\bkmkstart Partially Correct Semantics:43587&Admin%^56bpDO2bZ-000¦May or may not be an off-by-one error depending on what the participant means by "fourth place". }So the fourth place, we assign It as a three{\*\bkmkend Partially Correct Semantics:43587&Admin%^56bpDO2bZ-000¦May or may not be an off-by-one error depending on what the participant means by "fourth place". }\li0\fi0\ri0\sb0\sa0\ql\vertalt . So{\*\bkmkstart Value Exists:43587&Admin%^YCKsTxp7s-000¦} while this exists{\*\bkmkend Value Exists:43587&Admin%^YCKsTxp7s-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt , we have the variable V1 three minus. V1 of V4 would be three which would be three so V1 of three minus V1 of 4 is three, which is V0, which will be assigned as V4 which in fact is three. So V1 would be three,\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            13:11          right\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            13:22          So V1 4 minus one. V1 one XXX V1 4. V1 4 is three minus one is two. And V1 4 is updated as 2 so V1 4 is 2 now.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            13:37          Hm.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            13:37          So it'll be two now. It will be 2 which exists over here. It will be updated again. So this will run for a while or is it okay if I write it here?\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        13:55          Oh yeah, wherever you want\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            13:56          So V1 of three minus two would be V1 of 4, for, for V1 of 4 is 2. Okay. So V1 of 1 will be 2 now so V1 of 4 is V1 of 4 minus one which is one. V1 of hmm.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            14:19          \cf0\cb0{\*\bkmkstart Unsure:43587&Admin%^5dEa1NtsG-000¦}Hmm.{\*\bkmkend Unsure:43587&Admin%^5dEa1NtsG-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        14:20          What are you thinking?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            14:24          I'm thinking whether the while loop would exit anytime soon or would it just keep on? Because \cf0\cb0{\*\bkmkstart Value Exists:43587&Admin%^RuZhpQonY-000¦}{\*\bkmkstart Implicit Predicate Atom:43587&Admin%^mIPJZqYEZ-000¦}in each case we have a V1 which V1 4 which exists{\*\bkmkend Implicit Predicate Atom:43587&Admin%^mIPJZqYEZ-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Value Exists:43587&Admin%^RuZhpQonY-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . Right. So, so V1 4 is V1, two minus one, so we'll have the next one will be one minus one. And the next one I got to be. So, hmm\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            14:53          So V1 of. Okay. Three minus three, three minus one would be three minus, minus one would be four where it will change it again.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            15:38          I think we have an infinite loop here.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            16:12          I don't think we'll ever reach here because, because of the while loop.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        16:19          Okay, can you just write that?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            16:22          Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            16:44          Is it readable?\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        16:44          Um, I think we talked about it. So between it, we'll figure it out. Okay. Um, the time is 7:23. And then same question, um, why this confidence level?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            16:57          Uh, because I'm certain I haven't thought of all the cases in the while loop, \cf0\cb0{\*\bkmkstart Value Exists:43587&Admin%^6xt6NKEiU-000¦}so there might be a case where V1, doesn't exist, which I don't think there is.{\*\bkmkend Value Exists:43587&Admin%^6xt6NKEiU-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            17:11          can I change the confidence value?\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        17:16          Okay. So it was a four, now it's five.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            17:17          Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        17:18          Okay, cool. Um, all right, great. So then the last one,\cf0\cb0{\*\bkmkend Answer - Wrong:43748&Admin%^FgEdscYEL-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confidence - 5:43748&Admin%^GgkzwMqYs-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confusingness - Atom:43748&Admin%^inF0utc4k-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Repurposed Variable Atom:43748&Admin%^8zrbqk688-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet - 85:43748&Admin%^57QnM4eIA-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 26:43748&Admin%^1Bu98EYe1-000¦}{\*\bkmkstart Constant Variables Transformation:43748&Admin%^FPsa5gr4r-000¦}{\*\bkmkstart Answer - Right:43748&Admin%^QpDCtkQ1M-000¦}{\*\bkmkstart Confidence - 6:43748&Admin%^TfBAxERqA-000¦}{\*\bkmkstart Confusingness - Transformation:43748&Admin%^PZynsah6v-000¦}Subject:            17:31          [Snippet 26] {\*\bkmkstart Amusement:43587&Admin%^73sO7x6Bp-000¦}Int V1 is [laughs] okay. I can just read this carefully. V1, two plus three, printf V1. That's a five.{\*\bkmkend Amusement:43587&Admin%^73sO7x6Bp-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            17:49          \cf0\cb0{\*\bkmkstart Trick Question:43587&Admin%^vR3gTf2gz-000¦}This is not a trick question?{\*\bkmkend Trick Question:43587&Admin%^vR3gTf2gz-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        17:52          I can't answer that.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            17:56          It looks, it looks, yeah. End time is 7:24.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        18:02          Okay. And why that confidence level?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            18:05          \cf0\cb0{\*\bkmkstart Simple:43587&Admin%^wBi06Ed4V-000¦}Uh,{\*\bkmkstart Arithmetic:43587&Admin%^PK1DghMoC-000¦} so this is a straightforward arithmetic{\*\bkmkend Arithmetic:43587&Admin%^PK1DghMoC-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . So and we're just printing out the summation of the values, which it's pretty straightforward. It's, it's, yeah.{\*\bkmkend Simple:43587&Admin%^wBi06Ed4V-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Section - Evaluation:43748&Admin%^XyM2H7JyS-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confusingness - Transformation:43748&Admin%^PZynsah6v-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Confidence - 6:43748&Admin%^TfBAxERqA-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Answer - Right:43748&Admin%^QpDCtkQ1M-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Constant Variables Transformation:43748&Admin%^FPsa5gr4r-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Snippet - 26:43748&Admin%^1Bu98EYe1-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Section - Survey:43748&Admin%^n7ktrShhs-000¦}Interviewer:        18:17          Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        18:19          Okay, cool. Um, well that was all the questions, so thank you. Um, so if I could have you fill out just like a survey, like your experience and then we can go back and talk about all the questions.\cf0\cb0{\*\bkmkend Section - Survey:43748&Admin%^n7ktrShhs-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Section - Discussion:43748&Admin%^8BjLXmC8u-000¦}Interviewer:        24:12          Okay, great. Um, cool. So now we can go back and talk about the questions, um, for all of them. I'll just start by asking you if you have any questions about the code or your answer or anything.\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 11:43768&Admin%qvvwRq3kZ6-000¦}{\*\bkmkstart Discussion Question:43773&Admin%n8w0sqcQ6X-000¦}Subject:            24:41          [Snippet 11] {\*\bkmkstart Visual Reference:43745&Admin%^krmGh2e19-000¦}I just have a problem with this statement here [points at if-condition]{\*\bkmkend Visual Reference:43745&Admin%^krmGh2e19-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . So, if you could...\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        24:46          Um, so can you be a little bit more specific about what part of it, um, because you mentioned before that you've seen if statements before. Um, so, so what about it in particular? Um, is unusual?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            25:03          Um, uh, so \cf0\cb0{\*\bkmkstart Unsure:43587&Admin%^4khuI25xl-000¦}{\*\bkmkstart Precedence:43587&Admin%^iLDdXPKeg-000¦}{\*\bkmkstart Parenthesis:43587&Admin%^3HEpNgff0-000¦}one thing that strikes me here is, uh, so the, the order in which it'll uh, it'll uh, use the And, and, the Or statements, so would And be considered before Or the order of precedence. So, uh, how would that work for a statement with out {\*\bkmkstart Non-standard terminology:43745&Admin%^EIzV0sKPz-000¦Brackets -> Parens }brackets{\*\bkmkend Non-standard terminology:43745&Admin%^EIzV0sKPz-000¦Brackets -> Parens }\li0\fi0\ri0\sb0\sa0\ql\vertalt ?{\*\bkmkend Parenthesis:43587&Admin%^3HEpNgff0-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Precedence:43587&Admin%^iLDdXPKeg-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Unsure:43587&Admin%^4khuI25xl-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt  So that is one of my concerns.{\*\bkmkend Discussion Question:43773&Admin%n8w0sqcQ6X-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            25:30          What else?\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        25:34         {\*\bkmkstart Apparent Contradiction:43745&Admin%^nr2bvLU98-000¦This was not the case. Telling the participant the precedent didn't help the subject understand the semtantics at all, and I'm not sure how it could have. } If I were to tell you that order, would the rest of it makes sense?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            25:41          It might, I think. Yeah, you tell me the order.{\*\bkmkend Apparent Contradiction:43745&Admin%^nr2bvLU98-000¦This was not the case. Telling the participant the precedent didn't help the subject understand the semtantics at all, and I'm not sure how it could have. }\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        25:46          Okay. So it's good that you noticed that it could go either direction. So, um, the, the And has a tighter precedence.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            25:57          Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        25:57          So the And goes first. So knowing that, um, are you, how would you evaluate it then?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            26:04          So, uh, so zero.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        26:07          Can I just [Hands subject red pen instead of black]\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            26:08          Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        26:11          Alright. You can write all you want, but we'll know that it's from later.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            26:16          So zero and one. Okay. So this is this proceeds or two over two? Zero and one.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            26:33          Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Discussion Question:43773&Admin%FTstwaTELp-000¦}Subject:            26:35         {\*\bkmkstart Quote:43587&Admin%^mn71pHpFm-000¦}{\*\bkmkstart Implicit Predicate Atom:43587&Admin%^7BPmg8TEL-000¦}{\*\bkmkstart Unsure:43587&Admin%^b5JR08raT-000¦} {\*\bkmkstart Ambiguous Readability:43745&Admin%^Z7HDaCcxr-000¦}It's confusing because zero and one... what? What does, what's zero and one, what does. How would I, I don't know what it means. Yeah, it's, it's ambiguous.{\*\bkmkend Unsure:43587&Admin%^b5JR08raT-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Implicit Predicate Atom:43587&Admin%^7BPmg8TEL-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Quote:43587&Admin%^mn71pHpFm-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Ambiguous Readability:43745&Admin%^Z7HDaCcxr-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Discussion Question:43773&Admin%FTstwaTELp-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        26:50          Yeah. So before you brought up on the sort of more common thing of saying a variable equals something, um, actually, well, before, before I go into this. Oh, what? I didn't look at your, a thing to be a can, but what, what languages are you most familiar with? \cf0\cb0{\*\bkmkstart Python:43745&Admin%^CUknzmLpE-000¦}Like what's your, what's the language you're most familiar with? What programming language?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            27:15          Uh, python, yeah.\cf0\cb0{\*\bkmkend Python:43745&Admin%^CUknzmLpE-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        27:17          Python? Okay, cool. Um, so, uh, the way that I think python if statements and things like that work are, you'll have an expression like this and it will evaluate to true or false. If it's true, the first part of the if goes, and if its false the other part. C, it turns out, doesn't actually have true and false. Instead, true and false are represented by, uh...\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            27:50          Zero's and ones.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        27:51          Yeah. Well basically zero is false and any other value is true.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            27:58          Okay. Okay\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        27:59          Um, so when you see something like zero An And one, and you can think of it like false and true.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            28:06          Right\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        28:07          Um, so that's, that's essentially what it's saying.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            28:10          Okay, Okay, Right, Hmm.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            28:14          So this would become uh, so this is so false and true.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            28:24          \cf0\cb0{\*\bkmkstart Question about Semantics:43745&Admin%^poVue0CsU-000¦}Again, it, it's, it's, How would a program proceed from this because in, in. Okay. So, so we're not checking for anything, we just know that zeros and ones are... if. I mean, I guess some of it.{\*\bkmkend Question about Semantics:43745&Admin%^poVue0CsU-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        28:50          Well, can I, can I ask you, um, sort of a different form of this question.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            28:54          Mhmm\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        28:54          So if you were to take, if you were to replace in the statement that you've written zero and, and one or two [(0&&1)||2], um, if you were to replace zero with false and um, all the other numbers with true. So like actually write it down in that way.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            29:15          \cf0\cb0{\*\bkmkstart Alternative Idioms:43587&Admin%^lu3lKxEa7-000¦}True, uh false and and true, or two is true in general.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        29:18          Yeah, sure.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            29:19          Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        29:19          Um, so is this the kind of thing that you would expect to see in python? Like does this make sense or does this.\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Discussion Question:43773&Admin%VhXPpAT6ZU-000¦}Subject:            29:30         {\*\bkmkstart Incorrect Semantics:43587&Admin%^YhJP0vybH-000¦} Yeah, ok, I think this is much more clearer. Okay{\*\bkmkend Alternative Idioms:43587&Admin%^lu3lKxEa7-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . So if the statement is false and true would be, it would be a false right? False and true.{\*\bkmkend Incorrect Semantics:43587&Admin%^YhJP0vybH-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Discussion Question:43773&Admin%VhXPpAT6ZU-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        29:45          False and true, um, well, so, um, what makes in, in an an statement, what makes the whole thing true or false\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            29:56          in an and-statement so. Okay. \cf0\cb0{\*\bkmkstart Correct Semantics:43587&Admin%^prw5MH319-000¦}So it has to be true on both the sides to be a true otherwise it's a false{\*\bkmkend Correct Semantics:43587&Admin%^prw5MH319-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt .\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        30:01          Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            30:02          Yeah. So this is a false. Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        30:04          Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Discussion Question:43773&Admin%PF2GGZQ5Jv-000¦}Subject:            30:04         {\*\bkmkstart Correct Semantics:43587&Admin%^wzynksxUR-000¦} {\*\bkmkstart Visual Reference:43745&Admin%^P6TckeFRJ-000¦}False or true. This is false or true. So this going to be boiled down to this [F || T], right?{\*\bkmkend Visual Reference:43745&Admin%^P6TckeFRJ-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Discussion Question:43773&Admin%PF2GGZQ5Jv-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        30:14          Yeah, exactly\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            30:16          \cf0\cb0{\*\bkmkstart Caught Own Mistake After Prompted:43797&Admin%l24oRMK56l-000¦}Right. So if it's. Hmm, which is, I mean because if it's an if statement, so V1 would be assigned to six, it'll definitely be because it's either false or true, which if it's, you know, it's false and true would be true{\*\bkmkend Correct Semantics:43587&Admin%^wzynksxUR-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Caught Own Mistake After Prompted:43797&Admin%l24oRMK56l-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        30:40          following and true?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            30:41          or or true, or true\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        30:43          false or true.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            30:43          Yeah, yeah, yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        30:44          Yeah. You're right.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            30:44          Yeah. So, so the V1 value would be six here. Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        30:48          Yeah. So yeah. Um, and is there something else? I think maybe it was a different question, but yeah. So the way that you evaluated this with the falses and the trues that's exactly how this works. And so you eventually get to six. And so when originally when you wrote zero, um, that was just assuming that the, if statement didn't make sense and wouldn't even get executed. Okay, cool. That totally makes sense. Um, do you have any other questions about uh\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            31:26          No. I think I'm good\cf0\cb0{\*\bkmkend Snippet - 11:43768&Admin%qvvwRq3kZ6-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 50:43768&Admin%GBh7IkyIkd-000¦}Interviewer:        31:28          [Snippet 50] Okay, cool. Um, so look it over and let me know if you have any questions about that one.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            31:54          Nope. No questions.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        31:57          Okay. Did I have any questions about this one? No. I mean you were confident about it. You got it right. I don't really have anything to ask you about it.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            32:13          Okay.\cf0\cb0{\*\bkmkend Snippet - 50:43768&Admin%GBh7IkyIkd-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 71:43768&Admin%EJc52PUoX0-000¦}Interviewer:        32:15          [Snippet 71] So do you have any questions about this one?\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Discussion Question:43773&Admin%Q7OyyFF9gN-000¦}Subject:            32:23          So, uh, {\*\bkmkstart Preprocessor in Statement Atom:43587&Admin%^G47qQafXq-000¦}{\*\bkmkstart Questioning Program Validity:43587&Admin%^DllBi1ZgF-000¦}can we write hash-define statements inside the main code?{\*\bkmkend Questioning Program Validity:43587&Admin%^DllBi1ZgF-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Preprocessor in Statement Atom:43587&Admin%^G47qQafXq-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Discussion Question:43773&Admin%Q7OyyFF9gN-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        32:30          Uh, I mean you can, um, is, is that uncommon or?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            32:39          Y\cf0\cb0{\*\bkmkstart Uncommon pattern:43745&Admin%^fjPBITNC0-000¦}eah, that's not too common{\*\bkmkend Uncommon pattern:43745&Admin%^fjPBITNC0-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt .\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            32:42          so I think it's, I think it works. Yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        32:47          Um, I guess so, so what, \cf0\cb0{\*\bkmkstart Convention:43587&Admin%^PhwQj9JYn-000¦}what are you used to seeing or what would you have expected here instead?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            32:58          So hash-define over here\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        33:03          At the top?\cf0\cb0{\*\bkmkend Convention:43587&Admin%^PhwQj9JYn-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            33:03          Yeah, that would, yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        33:04          So that's just what you see more often?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            33:06          Yeah, that's, yeah.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        33:07          Okay. Are you familiar with uh, sorta how hash-defines work? Well, so what, what is, what is this notation doing?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            33:25         {\*\bkmkstart Performance Optimization:43587&Admin%^dNhPCLwMT-000¦Rather than describing how the construct works, the participant describes a commonly purported benefit of the construct. } I know that hash-defines they, they take less time to execute than a normal variable.{\*\bkmkend Performance Optimization:43587&Admin%^dNhPCLwMT-000¦Rather than describing how the construct works, the participant describes a commonly purported benefit of the construct. }\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        33:32          Sure.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            33:32          \cf0\cb0{\*\bkmkstart Correct for Wrong Reasons:43587&Admin%^PwNSZ4jTy-000¦}{\*\bkmkstart Unsure:43587&Admin%^4fdT7uscu-000¦}Yes. But I'm not certain how that is, but.{\*\bkmkend Unsure:43587&Admin%^4fdT7uscu-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Correct for Wrong Reasons:43587&Admin%^PwNSZ4jTy-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        33:37          So they're similar to a variable.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            33:38          Yeah, yeah, yeah. Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        33:40          Um, do you know of any difference between them and a variable\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            33:46         \cf0\cb0  {\*\bkmkstart Remember:43581&Admin%^AEchygnCv-000¦}{\*\bkmkstart Previously Seen:43745&Admin%^6k3d2Ehaq-000¦}um, I'm certain I've studied it, but I do not remember it right now.{\*\bkmkend Previously Seen:43745&Admin%^6k3d2Ehaq-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Remember:43581&Admin%^AEchygnCv-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        33:49          Ok, no problem. So, um, usually you only see this kind of thing, um, as a replacement for a variable when the variables constant\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            34:00          Right\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        34:01          Um, so, you know, with other variables you might be able to assign something to it, assign a different value, like for example, a counter. First. it's one then its two, then its three. These, the number's always the same, you can't update it and you're right that these things often do. They can be used for an optimization and the reason is because, um, whereas variables are stuck in memory and they actually have like an address, uh, these, uh, defines are actually done by the preprocessor or have you heard of the processor before? So, um, when a define is used, it actually updates the source code itself and then later it gets compiled. Um, so what happens is these get a evaluated, the defines, get evaluated, and then down here where the values M1 and M2 are, um, those, those don't stay there as positions in memory.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        35:02          They actually get replaced before compilation so that the value of M1 is there. And so if it gets compiled as if there are constants in there. Now, the tricky part about this one is that since the defines happen first and then the code is compiled and then the code is run. So it's like preprocessor, compilation, than execution, right? It means that Um, the preprocessor doesn't even know anything about the code, um, it just looks for the hashes. So, so what it does is it comes down here and assigns um one to M1, two to M2, but then it comes down here and reads this one and {\*\bkmkstart Non-standard terminology:43787&Admin%E4kYUKS0aZ-000¦Macro definition, not assignment }assigns two to M1, one to M{\*\bkmkend Non-standard terminology:43787&Admin%E4kYUKS0aZ-000¦Macro definition, not assignment }\li0\fi0\ri0\sb0\sa0\ql\vertalt 2, and then comes down here. So actually by the time this actually gets compiled and, then run, uh the value two to is in M1, the value one is in M2. Um, and it's just like you would put those numbers right in there themselves.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            35:55          Okay. So it doesn't read the code, it just replaces the hash defines with the, with the updated values.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        36:02          Exactly. And that's it. This way. It's much simpler than a normal variable, which is why you're right, it runs faster. Um, so any, any other questions about this one?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            36:13          No.\cf0\cb0{\*\bkmkend Snippet - 71:43768&Admin%EJc52PUoX0-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 25:43768&Admin%70Y292tLv1-000¦}Subject:            36:26          [Snippet 25] Okay, no questions.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        36:27          Okay. No questions at this one? Yeah, I mean, what can I say? You got the arithmetic correct? No, nothing.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            36:42          Okay.\cf0\cb0{\*\bkmkend Snippet - 25:43768&Admin%70Y292tLv1-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 109:43768&Admin%DIukbc3jff-000¦}Interviewer:        36:45          [Snippet 109] Um, any questions about this one?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            36:50          No.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        36:52          Okay. Um, so I, um, I have one.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        37:06          You used a specific phrase. So, um, we, we had talked before about how zero is false and any other value is true, but at the time, um, you did say that this would evaluate as true. Um, do you remember what your thought process was in making that decision?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            37:29          Uh, I, it was, \cf0\cb0{\*\bkmkstart Inferring Semantics from Reasoning:43587&Admin%^MkRm7H4F7-000¦}{\*\bkmkstart Incorrect Semantics:43587&Admin%^RN6ozGQq3-000¦}{\*\bkmkstart Similar To:43587&Admin%^f0yTXYpey-000¦if (0) is similar to while (1) }it was similar to something like a while one.{\*\bkmkend Similar To:43587&Admin%^f0yTXYpey-000¦if (0) is similar to while (1) }\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Incorrect Semantics:43587&Admin%^RN6ozGQq3-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Inferring Semantics from Reasoning:43587&Admin%^MkRm7H4F7-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        37:36          Okay.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            37:37          \cf0\cb0{\*\bkmkstart Value Exists:43587&Admin%^JKik0quVH-000¦}{\*\bkmkstart Boolean Value of Integer:43587&Admin%^ldLcGbF9D-000¦}{\*\bkmkstart If-statements must operate on a variable:43587&Admin%^9j4IAE2vB-000¦}{\*\bkmkstart Incorrect Semantics:43587&Admin%^oQy8YfgQN-000¦}{\*\bkmkstart Mental Model:43745&Admin%^L4JqK6Fta-000¦}So while keep on. So this is true [pointing at while(1) ], right? For all the cases. So I just assumed that since we have no other variable than one, I mean we're using zero here for the if, and zero is an integer. So it, it is true. I mean zero does exist. Yeah. So it'll just go into the if statement and yeah.{\*\bkmkend Incorrect Semantics:43587&Admin%^oQy8YfgQN-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend If-statements must operate on a variable:43587&Admin%^9j4IAE2vB-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Boolean Value of Integer:43587&Admin%^ldLcGbF9D-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Value Exists:43587&Admin%^JKik0quVH-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Mental Model:43745&Admin%^L4JqK6Fta-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        38:04          So, um, yeah, so I guess the logic there sounds like. Well, yeah. So what I guess what, when you say zero exists, um, is what is something in the code that would not exist, you know?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            38:23          Um hmm.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            38:26          I mean, yeah, that's, that's an interesting question.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        38:31          \cf0\cb0{\*\bkmkstart Apparent Contradiction:43745&Admin%^9Zf4SgrxP-000¦Participant understands that "while (1)" means always execute and "while (!1)" means never execute and that !1 is 0, but thinks while (0) means always execute. }So, um, this, this is like a very common idiom [pointing to while(1)], you see that all the time, while one, um, and so in your head if you wanted to do the opposite of that, I mean like I understand logically where you're coming from, but I'm trying to think.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            38:47          Yeah. So it'll be at a, I guess a not here.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        38:51          Oh, that makes sense. Yeah. Okay. Yeah. Not One.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            38:55          \cf0\cb0{\*\bkmkstart Correct Semantics:43587&Admin%^UK3f9GyID-000¦}{\*\bkmkstart Boolean Value of Integer:43587&Admin%^gBgU9QcCq-000¦}Yeah, but not one would be a zero so{\*\bkmkend Boolean Value of Integer:43587&Admin%^gBgU9QcCq-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Correct Semantics:43587&Admin%^UK3f9GyID-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt .{\*\bkmkend Apparent Contradiction:43745&Admin%^9Zf4SgrxP-000¦Participant understands that "while (1)" means always execute and "while (!1)" means never execute and that !1 is 0, but thinks while (0) means always execute. }\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        38:58          Right. So yeah, yeah, it's just one of those things, but I definitely see what you're getting, getting at, like integers just seem like sort of basic thing, so it could just be true. Um, okay. But any, any anyway, like the other one, zero. Zero is a fault in C just means false. Um, so in that case, would that change your answer?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            39:25         \cf0\cb0{\*\bkmkstart Caught Own Mistake After Prompted:43587&Admin%^QoOr27ich-000¦} I suppose so, I don't think. No. No. Okay. So um just run through it one more time. V1 is two if false. Okay. I see that it changes it. Okay. So if it won't go inside the false statement, so it'll be. It'll just increment it by one. So it'd be four minus one, which is three{\*\bkmkend Caught Own Mistake After Prompted:43587&Admin%^QoOr27ich-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        40:01          Right. Okay. Yeah. So that, that's exactly how it goes. So it's just like knowing that one thing about zero being false. Um, any other questions about.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            40:11          No. No.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        40:13          Cool.\cf0\cb0{\*\bkmkend Snippet - 109:43768&Admin%DIukbc3jff-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 37:43768&Admin%vJCzn9EutQ-000¦}Subject:            40:24          [Snippet 37] Mm hmm.\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Discussion Question:43773&Admin%JaMXes0ehV-000¦}Subject:            40:36         {\*\bkmkstart Notices Atom:43587&Admin%^kheHQMYTH-000¦}{\*\bkmkstart Unsure:43587&Admin%^asp0m8Cyo-000¦} {\*\bkmkstart Question about Semantics:43745&Admin%^7g0uPDuEl-000¦}I have a question here. So would it, would the preprocessing compute? This is two or would it be kept us three minus {\*\bkmkend Question about Semantics:43745&Admin%^7g0uPDuEl-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt one?{\*\bkmkend Unsure:43587&Admin%^asp0m8Cyo-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Notices Atom:43587&Admin%^kheHQMYTH-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Discussion Question:43773&Admin%JaMXes0ehV-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        40:46          Yeah, that is a really good question. Um, and I thought, well yeah. So let me, let me ask a quick question before that because you had mentioned that, um,\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            40:55          the spaces,\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        40:56          Right, so why, why did you ask that question? Ask this question about the spaces, um, or why did that seem maybe off to you\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            41:07         \cf0\cb0{\*\bkmkstart Learned from Mistake:43587&Admin%^qZqU8M40R-000¦} {\*\bkmkstart Not Previously Seen:43745&Admin%^zSjr1MidQ-000¦}because that in C I have encountered certain places where having a space generally messed up my execution{\*\bkmkend Learned from Mistake:43587&Admin%^qZqU8M40R-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . So, and I, I haven't, uh, maybe I have but {\*\bkmkstart Remember:43581&Admin%^DjHjKbFYz-000¦}I don't remember seeing spaces in hash-defines{\*\bkmkend Remember:43581&Admin%^DjHjKbFYz-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . So{\*\bkmkend Not Previously Seen:43745&Admin%^zSjr1MidQ-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        41:31          Can you think of um, a place where the space messed up your execution? Do you remember a time where it screwed up the code?\par
\pard\plain\plain\fs22\par
\plain\fs22{\*\bkmkstart printf:43725&Admin%^qEm5t4Lod-000¦}New Speaker:        41:46        \cf0\cb0{\*\bkmkstart Anecdote:43745&Admin%^yutQnwsvZ-000¦}  So I'm so, so the Linux compiler GCC. Uh, so I think there was a, so the printf statements would, wouldn't run because I had a space involved, a space or a tab involved. Interesting. Yeah. {\*\bkmkstart Apparent Contradiction:43587&Admin%^ojOcLtoOw-000¦}So that was something which was weird because again, that shouldn't matter in C, C plus plus, but it did.{\*\bkmkend Apparent Contradiction:43587&Admin%^ojOcLtoOw-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend printf:43725&Admin%^qEm5t4Lod-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        42:18          like in, in the string part or in the. You, do you remember like where the space or the tab was? Like for example, could you write it? And no worries if you can't remember.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            42:31          I don't remember it though. It's a, it's a, it's a sort of hint that it was C. [Writing printf("yolo", "lola", "rn") ] How did it go? Okay. So it was, it was something here and so let's, we're printing out multiple in one statement, we're printing multiple, uh, uh, uh, uh\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        43:01          Values\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            43:02          Yeah. Printing multiple things here. So this would, guess it was this which created problems. Okay. So you're trying to. Yeah,\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        43:17          you're trying to print out a tab.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            43:18          No, no, not a tab. But uh, so there's something here. So there's, as you know, those data is something else. And uh, yeah. So, so the space here I think was something which one of our professors pointed out that that you just remove the space and it'll work, and which it did. Which was funny.\cf0\cb0{\*\bkmkend Anecdote:43745&Admin%^yutQnwsvZ-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        43:47          So I, I might have a theory about that. There are some things, um, so the, the first argument of print death isn't, is different than the other ones. So the like the second and the third those are like things that get used the first one, but the first one is what's called a format specifier. So like here, if you look at this, it has percent-d in it, right? Which means you expect an Integer, but I can imagine if you had like a space between the percent and the d, it's no longer a special character or something like that.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            44:23          Um, no, no, no, no. It was.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        44:29          Well, don't worry about it now, but you think of if you think of it like later if you go home and it just pops in your head and you email it to me, I would love that.\par
\plain\fs22 asked a really good question, which is, does the preprocessor evaluate that expression or not? Um, and that's an excellent question because the answer is it doesn't.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            45:00          It does not.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        45:01          No, no, it, it leaves it as.\par
\plain\fs22 Subject:            44:37          Cool, I'll try to find that out.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        44:39          Okay, cool. Um, okay. But, so, so back to this guy. Uh, so you, you \par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            45:04          Oh right.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        45:05          But why, why did you think to ask that question?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            45:08          {\*\bkmkstart Caught Own Mistake Before Prompted:43587&Admin%^8Hlpy635D-000¦Except immediately after he fails to see the consequence of this leap. }Um, because of, because we're using and one here and as you said, M1 hash-defines. So the preprocessor just changes the value of the, the define, hash-define variable into the variable itself. So that's how I like. So it struck me whether it, it, it could be three minus one times two, or it could be just three minus one or it could be just this being evaluated. Which is two into two. Okay. Yeah. So I was not sure which one would this{\*\bkmkend Caught Own Mistake Before Prompted:43587&Admin%^8Hlpy635D-000¦Except immediately after he fails to see the consequence of this leap. }\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        45:47          Would that make a difference to the program?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            45:51         \cf0\cb0{\*\bkmkstart Incorrect Semantics:43587&Admin%^2wqRG3oo2-000¦} Um three minutes one, it would not. It does not.{\*\bkmkend Incorrect Semantics:43587&Admin%^2wqRG3oo2-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            45:56         \cf0\cb0{\*\bkmkstart Caught Own Mistake Before Prompted:43587&Admin%^1QLeBYvUq-000¦} Or hold on. Or could it or hm three minus one into two. This is the correct notation. Right? So this is what it does. So it would be three minus two, which is one.{\*\bkmkend Caught Own Mistake Before Prompted:43587&Admin%^1QLeBYvUq-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            46:11          Hmm.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            46:13          So if we have the, if, if.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            46:23          \cf0\cb0{\*\bkmkstart Correct Semantics:43587&Admin%^xuL8ukK88-000¦}{\*\bkmkstart Parenthesis:43588&Admin%^3yhqtUlcn-000¦}So I guess the output is one then because there are no brackets here.{\*\bkmkend Correct Semantics:43587&Admin%^xuL8ukK88-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Parenthesis:43588&Admin%^3yhqtUlcn-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        46:29          Yeah. So it turns out that you're correct about all those things. Um, and yeah, the output is one for exactly that reason.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            46:38          \cf0\cb0{\*\bkmkstart Parenthesis:43588&Admin%^7kADmFIFn-000¦}So yeah, the bracket doesn't come into picture.{\*\bkmkend Parenthesis:43588&Admin%^7kADmFIFn-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        46:40          Yeah. Um, which it causes no end of issues. Um, but, so that's, that's actually another reason why um sort of the spaces I find interesting because you know, you expect that if it's altogether it would happen first, but if they're spaced out and feels like it wouldn't, um, but anyway, um, okay. Um, so do you have any more questions about this?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            47:07          No.\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        47:09          Cool. One or two more.\cf0\cb0{\*\bkmkend Snippet - 37:43768&Admin%vJCzn9EutQ-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\cf0\cb0\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 85:43768&Admin%9Ptnto9BFQ-000¦}{\*\bkmkstart Discussion Question:43773&Admin%AfZscrdrEc-000¦}Subject             47:29          [Snippet 85] {\*\bkmkstart Caught Own Mistake Before Prompted:43587&Admin%^BLgI5goHw-000¦}{\*\bkmkstart Amusement:43587&Admin%^pEvUDN7VH-000¦}So yeah. So the while loop here would. {\*\bkmkstart Value Exists:43587&Admin%^T9BIT0UfN-000¦}So the while would just be while V1 4 exists{\*\bkmkend Value Exists:43587&Admin%^T9BIT0UfN-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt . So that's what's happening, right? Because it's neither zero. Oh, okay. Okay. Now I see. Huh. [Laughs]{\*\bkmkend Amusement:43587&Admin%^pEvUDN7VH-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Caught Own Mistake Before Prompted:43587&Admin%^BLgI5goHw-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt{\*\bkmkend Discussion Question:43773&Admin%AfZscrdrEc-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        47:48          It's like that one thing.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            47:59          Okay. So V1 is three here, three minus three, Zero V1, zero is three.\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            48:11          \cf0\cb0{\*\bkmkstart Correct Semantics:43587&Admin%^eBxOQokxl-000¦}V1 of four is assigned to V... Okay. So this is two now the next one, it would be V1 of three minus two, which is the V1 of four which is two, so V1 of 2 would be two, and V1 of V1 of four is one, the next one. The next one is V1 of 3 minus one, which is two, V1 of 4 which is one, so V1 of 2 is one and v1 of 4 is zero. So it'll terminate after that. So V1 is zero and uh V1 4 is zero. And V1 of one is, where is that, two. So I guess two and zero would be the output.{\*\bkmkend Correct Semantics:43587&Admin%^eBxOQokxl-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        49:23          Okay. Can you write that down here? Okay. So yeah, that's exactly what the answer is. So it's just knowing that one little detail and you were able to do the rest of it. Um perfectly, um, which is interesting to me for reasons why I will explain after we talk about this next one\cf0\cb0{\*\bkmkend Snippet - 85:43768&Admin%9Ptnto9BFQ-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22\cf0\cb0{\*\bkmkstart Snippet - 26:43768&Admin%MAEeX990eA-000¦}Interviewer:       49:45          [Snippet 26] Last one. Do you have questions about this?\par
\pard\plain\plain\fs22\par
\plain\fs22 Subject:            49:52          No. No questions.\cf0\cb0{\*\bkmkend Snippet - 26:43768&Admin%MAEeX990eA-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
\pard\plain\plain\fs22\par
\plain\fs22 Interviewer:        49:54          Okay. Yeah. Good. All right, thank you very much. I'm gonna. Go ahead and turn off the thing and then we can talk about sort of how the study worked.\cf0\cb0{\*\bkmkend Section - Discussion:43748&Admin%^8BjLXmC8u-000¦}\li0\fi0\ri0\sb0\sa0\ql\vertalt\par
}}